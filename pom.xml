<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.ac.ebi.jmzml</groupId>
    <artifactId>jmzml</artifactId>
    <packaging>jar</packaging>
    <version>1.7.12-SNAPSHOT</version>
    <name>MzML Java core API</name>
    <url>https://github.com/PRIDE-Utilities/jmzml</url>

    <parent>
        <groupId>uk.ac.ebi.pride.architectural</groupId>
        <artifactId>pride-core</artifactId>
        <version>1.0.1</version>
    </parent>

    <description>
        JAXB implementation of the mzML 1.1 standard as made available from the Proteomics Standards Initiative. This
        object model can be used to serialize/deserialize properly formed mzML XML files.
    </description>

    <!-- Developers -->
    <developers>
        <developer>
            <name>Richard Cote</name>
            <id>rcote</id>
            <email>rcote@ebi.ac.uk</email>
            <organization>Proteomics Services Team, PANDA Group, EMBL-European Bioinformatics Institute</organization>
        </developer>
        <developer>
            <name>Phil Jones</name>
            <id>philip_jones</id>
            <email>pjones@ebi.ac.uk</email>
            <organization>Proteomics Services Team, PANDA Group, EMBL-European Bioinformatics Institute</organization>
        </developer>
        <developer>
            <name>Lennart Martens</name>
            <id>lennart</id>
            <email>lennart.martens@ebi.ac.uk</email>
            <organization>Proteomics Services Team, PANDA Group, EMBL-European Bioinformatics Institute</organization>
        </developer>
        <developer>
            <name>Florian Reisinger</name>
            <id>florian</id>
            <email>florian@ebi.ac.uk</email>
            <organization>Proteomics Services Team, PANDA Group, EMBL-European Bioinformatics Institute</organization>
        </developer>
        <developer>
            <name>Harald Barsnes</name>
            <id>harald</id>
            <email>harald.barsnes@biomed.uib.no</email>
            <organization>Proteomics Unit, University of Bergen, Norway</organization>
        </developer>
        <developer>
            <name>Yasset Perez-Riverol</name>
            <id>yperez</id>
            <email>yperez@ebi.ac.uk</email>
            <organization>Proteomics Services Team, PRIDE, EMBL-European Bioinformatics Institute</organization>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <uk.ac.ebi.pride.architectural-pride-logging.version>1.0.0</uk.ac.ebi.pride.architectural-pride-logging.version>
        <uk.ac.ebi.pride.architectural-pride-tdd.version>1.0.3</uk.ac.ebi.pride.architectural-pride-tdd.version>
        <uk.ac.ebi.pride.architectural-pride-xml-handling.version>1.0.3</uk.ac.ebi.pride.architectural-pride-xml-handling.version>

        <jboss.version>1.3.0.Final</jboss.version>
        <commons.collections.version>3.2.2</commons.collections.version>
        <commons.code.version>1.7</commons.code.version>

    </properties>

    <!-- Dependencies -->
    <dependencies>

        <!-- for unit testing -->
        <dependency>
            <groupId>uk.ac.ebi.pride.architectural</groupId>
            <artifactId>pride-tdd</artifactId>
            <version>${uk.ac.ebi.pride.architectural-pride-tdd.version}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <!-- for logging -->
        <dependency>
            <groupId>uk.ac.ebi.pride.architectural</groupId>
            <artifactId>pride-logging</artifactId>
            <version>${uk.ac.ebi.pride.architectural-pride-logging.version}</version>
            <type>pom</type>
        </dependency>

        <!-- XML hanlidng of PRIDE Components -->
        <dependency>
            <groupId>uk.ac.ebi.pride.architectural</groupId>
            <artifactId>pride-xml-handling</artifactId>
            <version>${uk.ac.ebi.pride.architectural-pride-xml-handling.version}</version>
            <type>pom</type>
        </dependency>

        <!-- Customized libraries needed in jmzML -->

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons.collections.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.code.version}</version>
        </dependency>

    </dependencies>


    <!-- Build -->
    <build>
        <!-- Copy the resources required during building -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>jmzML.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>jmzML.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <!-- Two of the test depend on the architecture where the test are excuted, these tests will be
            removed from the automatic tests
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/MzMLIndexTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Dependency plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jmzml-${project.version}/lib</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Resources plugin -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jmzml-${project.version}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>./</directory>
                                    <includes>
                                        <include>readMe.txt</include>
                                        <include>LICENSE-2.0.txt</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--to run the test cases-->

            <plugin>
                <!-- you can use this plugin to generate the jaxb object model from
                    the schema and binding files specified below. Note: this will
                    need an explicit maven goal call, since it is not intergrated
                    into the standard mvn lifecycle. The goal to use is:
                    org.jvnet.jaxb2.maven2:maven-jaxb2-plugin:0.6.3:generate

                    NOTE: the code generation may overwrite existing classes, so care
                          should be taken with files that were manually modified. Such
                          files are in the current version (0.6): CVParam, UserParam,
                          ParamGroup, BinaryDataArray and ComponentList.
                -->
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <version>0.6.3</version>
                <configuration>
                    <extension>true</extension>
                    <schemaDirectory>src/main/resources</schemaDirectory>
                    <schemaIncludes>
                        <include>mzML1.1.1-idx.xsd</include>
                    </schemaIncludes>
                    <bindingDirectory>src/main/resources</bindingDirectory>
                    <bindingIncludes>
                        <include>bindings.xjb</include>
                    </bindingIncludes>
                    <generateDirectory>src/main/java</generateDirectory>
                    <removeOldOutput>false</removeOldOutput>
                    <forceRegenerate>true</forceRegenerate>
                    <verbose>true</verbose>
                    <args>
                        <arg>-no-header</arg>
                    </args>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>




    <repositories>
        <repository>
            <id>springsource-repo</id>
            <name>SpringSource Repository</name>
            <url>http://repo.springsource.org/release</url>
        </repository>

        <repository>
            <id>JBoss</id>
            <name>JBoss repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>

    <!--scm git config-->
    <scm>
        <connection>scm:git:https://github.com/PRIDE-Utilities/jmzml.git</connection>
        <developerConnection>scm:git:https://github.com/PRIDE-Utilities/jmzml.git</developerConnection>
        <url>https://github.com/PRIDE-Utilities/jmzml.git</url>
        <tag>HEAD</tag>
    </scm>

</project>
